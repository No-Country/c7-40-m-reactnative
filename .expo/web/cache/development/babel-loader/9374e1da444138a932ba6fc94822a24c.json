{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _routers = require(\"@react-navigation/routers\");\n\nvar _EnsureSingleNavigator = _interopRequireDefault(require(\"./EnsureSingleNavigator\"));\n\nvar _UnhandledActionContext = _interopRequireDefault(require(\"./UnhandledActionContext\"));\n\nvar _NavigationBuilderContext = _interopRequireDefault(require(\"./NavigationBuilderContext\"));\n\nvar _NavigationStateContext = _interopRequireDefault(require(\"./NavigationStateContext\"));\n\nvar _NavigationRouteContext = _interopRequireDefault(require(\"./NavigationRouteContext\"));\n\nvar _NavigationContext = _interopRequireDefault(require(\"./NavigationContext\"));\n\nvar _useScheduleUpdate = require(\"./useScheduleUpdate\");\n\nvar _useChildListeners2 = _interopRequireDefault(require(\"./useChildListeners\"));\n\nvar _useKeyedChildListeners = _interopRequireDefault(require(\"./useKeyedChildListeners\"));\n\nvar _useOptionsGetters2 = _interopRequireDefault(require(\"./useOptionsGetters\"));\n\nvar _useEventEmitter = _interopRequireDefault(require(\"./useEventEmitter\"));\n\nvar _useSyncState3 = _interopRequireDefault(require(\"./useSyncState\"));\n\nvar _checkSerializable = _interopRequireDefault(require(\"./checkSerializable\"));\n\nvar _excluded = [\"key\", \"routeNames\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar NOT_INITIALIZED_ERROR = \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/5.x/navigating-without-navigation-prop#handling-initialization for more details.\";\nvar serializableWarnings = [];\n\ntry {\n  Object.defineProperty(global, 'REACT_NAVIGATION_REDUX_DEVTOOLS_EXTENSION_INTEGRATION_ENABLED', {\n    set: function set(_) {\n      console.warn(\"Redux devtools extension integration can be enabled with the '@react-navigation/devtools' package. For more details, see https://reactnavigation.org/docs/5.x/devtools\");\n    }\n  });\n} catch (e) {}\n\nvar getPartialState = function getPartialState(state) {\n  if (state === undefined) {\n    return;\n  }\n\n  var key = state.key,\n      routeNames = state.routeNames,\n      partialState = (0, _objectWithoutProperties2.default)(state, _excluded);\n  return Object.assign({}, partialState, {\n    stale: true,\n    routes: state.routes.map(function (route) {\n      if (route.state === undefined) {\n        return route;\n      }\n\n      return Object.assign({}, route, {\n        state: getPartialState(route.state)\n      });\n    })\n  });\n};\n\nvar BaseNavigationContainer = React.forwardRef(function BaseNavigationContainer(_ref, ref) {\n  var initialState = _ref.initialState,\n      onStateChange = _ref.onStateChange,\n      onUnhandledAction = _ref.onUnhandledAction,\n      independent = _ref.independent,\n      children = _ref.children;\n  var parent = React.useContext(_NavigationStateContext.default);\n\n  if (!parent.isDefault && !independent) {\n    throw new Error(\"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitely. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\");\n  }\n\n  var _useSyncState = (0, _useSyncState3.default)(function () {\n    return getPartialState(initialState == null ? undefined : initialState);\n  }),\n      _useSyncState2 = (0, _slicedToArray2.default)(_useSyncState, 5),\n      state = _useSyncState2[0],\n      getState = _useSyncState2[1],\n      setState = _useSyncState2[2],\n      scheduleUpdate = _useSyncState2[3],\n      flushUpdates = _useSyncState2[4];\n\n  var isFirstMountRef = React.useRef(true);\n  var navigatorKeyRef = React.useRef();\n  var getKey = React.useCallback(function () {\n    return navigatorKeyRef.current;\n  }, []);\n  var setKey = React.useCallback(function (key) {\n    navigatorKeyRef.current = key;\n  }, []);\n\n  var _useChildListeners = (0, _useChildListeners2.default)(),\n      listeners = _useChildListeners.listeners,\n      addListener = _useChildListeners.addListener;\n\n  var _useKeyedChildListene = (0, _useKeyedChildListeners.default)(),\n      keyedListeners = _useKeyedChildListene.keyedListeners,\n      addKeyedListener = _useKeyedChildListene.addKeyedListener;\n\n  var dispatch = function dispatch(action) {\n    if (listeners.focus[0] == null) {\n      throw new Error(NOT_INITIALIZED_ERROR);\n    }\n\n    listeners.focus[0](function (navigation) {\n      return navigation.dispatch(action);\n    });\n  };\n\n  var canGoBack = function canGoBack() {\n    if (listeners.focus[0] == null) {\n      return false;\n    }\n\n    var _listeners$focus$ = listeners.focus[0](function (navigation) {\n      return navigation.canGoBack();\n    }),\n        result = _listeners$focus$.result,\n        handled = _listeners$focus$.handled;\n\n    if (handled) {\n      return result;\n    } else {\n      return false;\n    }\n  };\n\n  var resetRoot = React.useCallback(function (state) {\n    var _state$key, _keyedListeners$getSt, _keyedListeners$getSt2;\n\n    var target = (_state$key = state === null || state === void 0 ? void 0 : state.key) !== null && _state$key !== void 0 ? _state$key : (_keyedListeners$getSt = (_keyedListeners$getSt2 = keyedListeners.getState).root) === null || _keyedListeners$getSt === void 0 ? void 0 : _keyedListeners$getSt.call(_keyedListeners$getSt2).key;\n\n    if (target == null) {\n      throw new Error(NOT_INITIALIZED_ERROR);\n    }\n\n    listeners.focus[0](function (navigation) {\n      return navigation.dispatch(Object.assign({}, _routers.CommonActions.reset(state), {\n        target: target\n      }));\n    });\n  }, [keyedListeners.getState, listeners.focus]);\n  var getRootState = React.useCallback(function () {\n    var _keyedListeners$getSt3, _keyedListeners$getSt4;\n\n    return (_keyedListeners$getSt3 = (_keyedListeners$getSt4 = keyedListeners.getState).root) === null || _keyedListeners$getSt3 === void 0 ? void 0 : _keyedListeners$getSt3.call(_keyedListeners$getSt4);\n  }, [keyedListeners.getState]);\n  var getCurrentRoute = React.useCallback(function () {\n    var state = getRootState();\n\n    if (state === undefined) {\n      return undefined;\n    }\n\n    while (state.routes[state.index].state !== undefined) {\n      state = state.routes[state.index].state;\n    }\n\n    return state.routes[state.index];\n  }, [getRootState]);\n  var emitter = (0, _useEventEmitter.default)();\n\n  var _useOptionsGetters = (0, _useOptionsGetters2.default)({}),\n      addOptionsGetter = _useOptionsGetters.addOptionsGetter,\n      getCurrentOptions = _useOptionsGetters.getCurrentOptions;\n\n  React.useImperativeHandle(ref, function () {\n    return Object.assign({}, Object.keys(_routers.CommonActions).reduce(function (acc, name) {\n      acc[name] = function () {\n        return dispatch(_routers.CommonActions[name].apply(_routers.CommonActions, arguments));\n      };\n\n      return acc;\n    }, {}), emitter.create('root'), {\n      resetRoot: resetRoot,\n      dispatch: dispatch,\n      canGoBack: canGoBack,\n      getRootState: getRootState,\n      getState: function getState() {\n        return state;\n      },\n      getParent: function getParent() {\n        return undefined;\n      },\n      dangerouslyGetState: function dangerouslyGetState() {\n        return state;\n      },\n      dangerouslyGetParent: function dangerouslyGetParent() {\n        return undefined;\n      },\n      getCurrentRoute: getCurrentRoute,\n      getCurrentOptions: getCurrentOptions\n    });\n  });\n  var onDispatchAction = React.useCallback(function (action, noop) {\n    emitter.emit({\n      type: '__unsafe_action__',\n      data: {\n        action: action,\n        noop: noop\n      }\n    });\n  }, [emitter]);\n  var lastEmittedOptionsRef = React.useRef();\n  var onOptionsChange = React.useCallback(function (options) {\n    if (lastEmittedOptionsRef.current === options) {\n      return;\n    }\n\n    lastEmittedOptionsRef.current = options;\n    emitter.emit({\n      type: 'options',\n      data: {\n        options: options\n      }\n    });\n  }, [emitter]);\n  var builderContext = React.useMemo(function () {\n    return {\n      addListener: addListener,\n      addKeyedListener: addKeyedListener,\n      onDispatchAction: onDispatchAction,\n      onOptionsChange: onOptionsChange\n    };\n  }, [addListener, addKeyedListener, onDispatchAction, onOptionsChange]);\n  var scheduleContext = React.useMemo(function () {\n    return {\n      scheduleUpdate: scheduleUpdate,\n      flushUpdates: flushUpdates\n    };\n  }, [scheduleUpdate, flushUpdates]);\n  var isInitialRef = React.useRef(true);\n  var getIsInitial = React.useCallback(function () {\n    return isInitialRef.current;\n  }, []);\n  var context = React.useMemo(function () {\n    return {\n      state: state,\n      getState: getState,\n      setState: setState,\n      getKey: getKey,\n      setKey: setKey,\n      getIsInitial: getIsInitial,\n      addOptionsGetter: addOptionsGetter\n    };\n  }, [state, getState, setState, getKey, setKey, getIsInitial, addOptionsGetter]);\n  var onStateChangeRef = React.useRef(onStateChange);\n  React.useEffect(function () {\n    isInitialRef.current = false;\n    onStateChangeRef.current = onStateChange;\n  });\n  React.useEffect(function () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (state !== undefined) {\n        var result = (0, _checkSerializable.default)(state);\n\n        if (!result.serializable) {\n          var location = result.location,\n              reason = result.reason;\n          var path = '';\n          var pointer = state;\n          var params = false;\n\n          for (var i = 0; i < location.length; i++) {\n            var curr = location[i];\n            var prev = location[i - 1];\n            pointer = pointer[curr];\n\n            if (!params && curr === 'state') {\n              continue;\n            } else if (!params && curr === 'routes') {\n              if (path) {\n                path += ' > ';\n              }\n            } else if (!params && typeof curr === 'number' && prev === 'routes') {\n              var _pointer;\n\n              path += (_pointer = pointer) === null || _pointer === void 0 ? void 0 : _pointer.name;\n            } else if (!params) {\n              path += \" > \".concat(curr);\n              params = true;\n            } else {\n              if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                path += \"[\".concat(curr, \"]\");\n              } else if (/^[a-z$_]+$/i.test(curr)) {\n                path += \".\".concat(curr);\n              } else {\n                path += \"[\".concat(JSON.stringify(curr), \"]\");\n              }\n            }\n          }\n\n          var message = \"Non-serializable values were found in the navigation state. Check:\\n\\n\".concat(path, \" (\").concat(reason, \")\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/5.x/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.\");\n\n          if (!serializableWarnings.includes(message)) {\n            serializableWarnings.push(message);\n            console.warn(message);\n          }\n        }\n      }\n    }\n\n    emitter.emit({\n      type: 'state',\n      data: {\n        state: state\n      }\n    });\n\n    if (!isFirstMountRef.current && onStateChangeRef.current) {\n      onStateChangeRef.current(getRootState());\n    }\n\n    isFirstMountRef.current = false;\n  }, [getRootState, emitter, state]);\n  var defaultOnUnhandledAction = React.useCallback(function (action) {\n    if (process.env.NODE_ENV === 'production') {\n      return;\n    }\n\n    var payload = action.payload;\n    var message = \"The action '\".concat(action.type, \"'\").concat(payload ? \" with payload \".concat(JSON.stringify(action.payload)) : '', \" was not handled by any navigator.\");\n\n    switch (action.type) {\n      case 'NAVIGATE':\n      case 'PUSH':\n      case 'REPLACE':\n      case 'JUMP_TO':\n        if (payload !== null && payload !== void 0 && payload.name) {\n          message += \"\\n\\nDo you have a screen named '\".concat(payload.name, \"'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/5.x/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.\");\n        } else {\n          message += \"\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/5.x/navigation-actions for usage.\";\n        }\n\n        break;\n\n      case 'GO_BACK':\n      case 'POP':\n      case 'POP_TO_TOP':\n        message += \"\\n\\nIs there any screen to go back to?\";\n        break;\n\n      case 'OPEN_DRAWER':\n      case 'CLOSE_DRAWER':\n      case 'TOGGLE_DRAWER':\n        message += \"\\n\\nIs your screen inside a Drawer navigator?\";\n        break;\n    }\n\n    message += \"\\n\\nThis is a development-only warning and won't be shown in production.\";\n    console.error(message);\n  }, []);\n  var element = React.createElement(_useScheduleUpdate.ScheduleUpdateContext.Provider, {\n    value: scheduleContext\n  }, React.createElement(_NavigationBuilderContext.default.Provider, {\n    value: builderContext\n  }, React.createElement(_NavigationStateContext.default.Provider, {\n    value: context\n  }, React.createElement(_UnhandledActionContext.default.Provider, {\n    value: onUnhandledAction !== null && onUnhandledAction !== void 0 ? onUnhandledAction : defaultOnUnhandledAction\n  }, React.createElement(_EnsureSingleNavigator.default, null, children)))));\n\n  if (independent) {\n    element = React.createElement(_NavigationRouteContext.default.Provider, {\n      value: undefined\n    }, React.createElement(_NavigationContext.default.Provider, {\n      value: undefined\n    }, element));\n  }\n\n  return element;\n});\nvar _default = BaseNavigationContainer;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["NOT_INITIALIZED_ERROR","serializableWarnings","Object","defineProperty","global","set","_","console","warn","e","getPartialState","state","undefined","key","routeNames","partialState","stale","routes","map","route","BaseNavigationContainer","React","forwardRef","ref","initialState","onStateChange","onUnhandledAction","independent","children","parent","useContext","NavigationStateContext","isDefault","Error","useSyncState","getState","setState","scheduleUpdate","flushUpdates","isFirstMountRef","useRef","navigatorKeyRef","getKey","useCallback","current","setKey","useChildListeners","listeners","addListener","useKeyedChildListeners","keyedListeners","addKeyedListener","dispatch","action","focus","navigation","canGoBack","result","handled","resetRoot","target","root","_keyedListeners$getSt","CommonActions","reset","getRootState","_keyedListeners$getSt3","getCurrentRoute","index","emitter","useEventEmitter","useOptionsGetters","addOptionsGetter","getCurrentOptions","useImperativeHandle","keys","reduce","acc","name","create","getParent","dangerouslyGetState","dangerouslyGetParent","onDispatchAction","noop","emit","type","data","lastEmittedOptionsRef","onOptionsChange","options","builderContext","useMemo","scheduleContext","isInitialRef","getIsInitial","context","onStateChangeRef","useEffect","process","env","NODE_ENV","checkSerializable","serializable","location","reason","path","pointer","params","i","length","curr","prev","_pointer","test","JSON","stringify","message","includes","push","defaultOnUnhandledAction","payload","error","element","ScheduleUpdateContext","Provider","value","NavigationBuilderContext","UnhandledActionContext","EnsureSingleNavigator","NavigationRouteContext","NavigationContext"],"sources":["BaseNavigationContainer.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  CommonActions,\n  Route,\n  NavigationState,\n  InitialState,\n  PartialState,\n  NavigationAction,\n} from '@react-navigation/routers';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationContext from './NavigationContext';\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\nimport useChildListeners from './useChildListeners';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useOptionsGetters from './useOptionsGetters';\nimport useEventEmitter from './useEventEmitter';\nimport useSyncState from './useSyncState';\nimport checkSerializable from './checkSerializable';\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerRef,\n  NavigationContainerProps,\n} from './types';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\nconst NOT_INITIALIZED_ERROR =\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/5.x/navigating-without-navigation-prop#handling-initialization for more details.\";\n\nconst serializableWarnings: string[] = [];\n\ntry {\n  /**\n   * Migration instructions for removal of devtools from core\n   */\n  Object.defineProperty(\n    global,\n    'REACT_NAVIGATION_REDUX_DEVTOOLS_EXTENSION_INTEGRATION_ENABLED',\n    {\n      set(_) {\n        console.warn(\n          \"Redux devtools extension integration can be enabled with the '@react-navigation/devtools' package. For more details, see https://reactnavigation.org/docs/5.x/devtools\"\n        );\n      },\n    }\n  );\n} catch (e) {\n  // Ignore\n}\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = (\n  state: InitialState | undefined\n): PartialState<NavigationState> | undefined => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { key, routeNames, ...partialState } = state;\n\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map((route) => {\n      if (route.state === undefined) {\n        return route as Route<string> & {\n          state?: PartialState<NavigationState>;\n        };\n      }\n\n      return { ...route, state: getPartialState(route.state) };\n    }),\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst BaseNavigationContainer = React.forwardRef(\n  function BaseNavigationContainer(\n    {\n      initialState,\n      onStateChange,\n      onUnhandledAction,\n      independent,\n      children,\n    }: NavigationContainerProps,\n    ref?: React.Ref<NavigationContainerRef>\n  ) {\n    const parent = React.useContext(NavigationStateContext);\n\n    if (!parent.isDefault && !independent) {\n      throw new Error(\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitely. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\n      );\n    }\n\n    const [\n      state,\n      getState,\n      setState,\n      scheduleUpdate,\n      flushUpdates,\n    ] = useSyncState<State>(() =>\n      getPartialState(initialState == null ? undefined : initialState)\n    );\n\n    const isFirstMountRef = React.useRef<boolean>(true);\n\n    const navigatorKeyRef = React.useRef<string | undefined>();\n\n    const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n    const setKey = React.useCallback((key: string) => {\n      navigatorKeyRef.current = key;\n    }, []);\n\n    const { listeners, addListener } = useChildListeners();\n\n    const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n    const dispatch = (\n      action: NavigationAction | ((state: NavigationState) => NavigationAction)\n    ) => {\n      if (listeners.focus[0] == null) {\n        throw new Error(NOT_INITIALIZED_ERROR);\n      }\n\n      listeners.focus[0]((navigation) => navigation.dispatch(action));\n    };\n\n    const canGoBack = () => {\n      if (listeners.focus[0] == null) {\n        return false;\n      }\n\n      const { result, handled } = listeners.focus[0]((navigation) =>\n        navigation.canGoBack()\n      );\n\n      if (handled) {\n        return result;\n      } else {\n        return false;\n      }\n    };\n\n    const resetRoot = React.useCallback(\n      (state?: PartialState<NavigationState> | NavigationState) => {\n        const target = state?.key ?? keyedListeners.getState.root?.().key;\n\n        if (target == null) {\n          throw new Error(NOT_INITIALIZED_ERROR);\n        }\n\n        listeners.focus[0]((navigation) =>\n          navigation.dispatch({\n            ...CommonActions.reset(state),\n            target,\n          })\n        );\n      },\n      [keyedListeners.getState, listeners.focus]\n    );\n\n    const getRootState = React.useCallback(() => {\n      return keyedListeners.getState.root?.();\n    }, [keyedListeners.getState]);\n\n    const getCurrentRoute = React.useCallback(() => {\n      let state = getRootState();\n      if (state === undefined) {\n        return undefined;\n      }\n      while (state.routes[state.index].state !== undefined) {\n        state = state.routes[state.index].state as NavigationState;\n      }\n      return state.routes[state.index];\n    }, [getRootState]);\n\n    const emitter = useEventEmitter<NavigationContainerEventMap>();\n\n    const { addOptionsGetter, getCurrentOptions } = useOptionsGetters({});\n\n    React.useImperativeHandle(ref, () => ({\n      ...(Object.keys(CommonActions) as (keyof typeof CommonActions)[]).reduce<\n        any\n      >((acc, name) => {\n        acc[name] = (...args: any[]) =>\n          dispatch(\n            CommonActions[name](\n              // @ts-expect-error: we can't know the type statically\n              ...args\n            )\n          );\n        return acc;\n      }, {}),\n      ...emitter.create('root'),\n      resetRoot,\n      dispatch,\n      canGoBack,\n      getRootState,\n      getState: () => state,\n      getParent: () => undefined,\n      dangerouslyGetState: () => state,\n      dangerouslyGetParent: () => undefined,\n      getCurrentRoute,\n      getCurrentOptions,\n    }));\n\n    const onDispatchAction = React.useCallback(\n      (action: NavigationAction, noop: boolean) => {\n        emitter.emit({ type: '__unsafe_action__', data: { action, noop } });\n      },\n      [emitter]\n    );\n\n    const lastEmittedOptionsRef = React.useRef<object | undefined>();\n\n    const onOptionsChange = React.useCallback(\n      (options) => {\n        if (lastEmittedOptionsRef.current === options) {\n          return;\n        }\n\n        lastEmittedOptionsRef.current = options;\n\n        emitter.emit({\n          type: 'options',\n          data: { options },\n        });\n      },\n      [emitter]\n    );\n\n    const builderContext = React.useMemo(\n      () => ({\n        addListener,\n        addKeyedListener,\n        onDispatchAction,\n        onOptionsChange,\n      }),\n      [addListener, addKeyedListener, onDispatchAction, onOptionsChange]\n    );\n\n    const scheduleContext = React.useMemo(\n      () => ({ scheduleUpdate, flushUpdates }),\n      [scheduleUpdate, flushUpdates]\n    );\n\n    const isInitialRef = React.useRef(true);\n\n    const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n    const context = React.useMemo(\n      () => ({\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      }),\n      [\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      ]\n    );\n\n    const onStateChangeRef = React.useRef(onStateChange);\n\n    React.useEffect(() => {\n      isInitialRef.current = false;\n      onStateChangeRef.current = onStateChange;\n    });\n\n    React.useEffect(() => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (state !== undefined) {\n          const result = checkSerializable(state);\n\n          if (!result.serializable) {\n            const { location, reason } = result;\n\n            let path = '';\n            let pointer: Record<any, any> = state;\n            let params = false;\n\n            for (let i = 0; i < location.length; i++) {\n              const curr = location[i];\n              const prev = location[i - 1];\n\n              pointer = pointer[curr];\n\n              if (!params && curr === 'state') {\n                continue;\n              } else if (!params && curr === 'routes') {\n                if (path) {\n                  path += ' > ';\n                }\n              } else if (\n                !params &&\n                typeof curr === 'number' &&\n                prev === 'routes'\n              ) {\n                path += pointer?.name;\n              } else if (!params) {\n                path += ` > ${curr}`;\n                params = true;\n              } else {\n                if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                  path += `[${curr}]`;\n                } else if (/^[a-z$_]+$/i.test(curr)) {\n                  path += `.${curr}`;\n                } else {\n                  path += `[${JSON.stringify(curr)}]`;\n                }\n              }\n            }\n\n            const message = `Non-serializable values were found in the navigation state. Check:\\n\\n${path} (${reason})\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/5.x/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.`;\n\n            if (!serializableWarnings.includes(message)) {\n              serializableWarnings.push(message);\n              console.warn(message);\n            }\n          }\n        }\n      }\n\n      emitter.emit({ type: 'state', data: { state } });\n\n      if (!isFirstMountRef.current && onStateChangeRef.current) {\n        onStateChangeRef.current(getRootState());\n      }\n\n      isFirstMountRef.current = false;\n    }, [getRootState, emitter, state]);\n\n    const defaultOnUnhandledAction = React.useCallback(\n      (action: NavigationAction) => {\n        if (process.env.NODE_ENV === 'production') {\n          return;\n        }\n\n        const payload: Record<string, any> | undefined = action.payload;\n\n        let message = `The action '${action.type}'${\n          payload ? ` with payload ${JSON.stringify(action.payload)}` : ''\n        } was not handled by any navigator.`;\n\n        switch (action.type) {\n          case 'NAVIGATE':\n          case 'PUSH':\n          case 'REPLACE':\n          case 'JUMP_TO':\n            if (payload?.name) {\n              message += `\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/5.x/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.`;\n            } else {\n              message += `\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/5.x/navigation-actions for usage.`;\n            }\n\n            break;\n          case 'GO_BACK':\n          case 'POP':\n          case 'POP_TO_TOP':\n            message += `\\n\\nIs there any screen to go back to?`;\n            break;\n          case 'OPEN_DRAWER':\n          case 'CLOSE_DRAWER':\n          case 'TOGGLE_DRAWER':\n            message += `\\n\\nIs your screen inside a Drawer navigator?`;\n            break;\n        }\n\n        message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n\n        console.error(message);\n      },\n      []\n    );\n\n    let element = (\n      <ScheduleUpdateContext.Provider value={scheduleContext}>\n        <NavigationBuilderContext.Provider value={builderContext}>\n          <NavigationStateContext.Provider value={context}>\n            <UnhandledActionContext.Provider\n              value={onUnhandledAction ?? defaultOnUnhandledAction}\n            >\n              <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\n            </UnhandledActionContext.Provider>\n          </NavigationStateContext.Provider>\n        </NavigationBuilderContext.Provider>\n      </ScheduleUpdateContext.Provider>\n    );\n\n    if (independent) {\n      // We need to clear any existing contexts for nested independent container to work correctly\n      element = (\n        <NavigationRouteContext.Provider value={undefined}>\n          <NavigationContext.Provider value={undefined}>\n            {element}\n          </NavigationContext.Provider>\n        </NavigationRouteContext.Provider>\n      );\n    }\n\n    return element;\n  }\n);\n\nexport default BaseNavigationContainer;\n"]},"metadata":{},"sourceType":"script"}