{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\n\nvar _Divider = _interopRequireDefault(require(\"../Divider\"));\n\nvar _theming = require(\"../../core/theming\");\n\nvar _excluded = [\"children\", \"title\", \"theme\", \"style\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar DrawerSection = function DrawerSection(_ref) {\n  var children = _ref.children,\n      title = _ref.title,\n      theme = _ref.theme,\n      style = _ref.style,\n      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var colors = theme.colors,\n      fonts = theme.fonts;\n  var titleColor = (0, _color.default)(colors.text).alpha(0.54).rgb().string();\n  var font = fonts.medium;\n  return React.createElement(_reactNative.View, _extends({\n    style: [styles.container, style]\n  }, rest), title && React.createElement(_reactNative.View, {\n    style: styles.titleContainer\n  }, React.createElement(_Text.default, {\n    numberOfLines: 1,\n    style: [Object.assign({\n      color: titleColor\n    }, font), styles.title]\n  }, title)), children, React.createElement(_Divider.default, {\n    style: styles.divider\n  }));\n};\n\nDrawerSection.displayName = 'Drawer.Section';\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    marginBottom: 4\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center'\n  },\n  title: {\n    marginLeft: 16\n  },\n  divider: {\n    marginTop: 4\n  }\n});\n\nvar _default = (0, _theming.withTheme)(DrawerSection);\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,OAAuD;EAAA,IAApDC,QAAoD,QAApDA,QAAoD;EAAA,IAA1CC,KAA0C,QAA1CA,KAA0C;EAAA,IAAnCC,KAAmC,QAAnCA,KAAmC;EAAA,IAA5BC,KAA4B,QAA5BA,KAA4B;EAAA,IAAlBC,IAAkB;EAC3E,IAAQC,MAAR,GAA0BH,KAA1B,CAAQG,MAAR;EAAA,IAAgBC,KAAhB,GAA0BJ,KAA1B,CAAgBI,KAAhB;EACA,IAAMC,UAAU,GAAGC,oBAAMH,MAAM,CAACI,IAAbD,EAAmBE,KAAnBF,CAAyB,IAAzBA,EAA+BG,GAA/BH,GAAqCI,MAArCJ,EAAnB;EACA,IAAMK,IAAI,GAAGP,KAAK,CAACQ,MAAnB;EAEA,OACEC,oBAACC,iBAAD;IAAMb,KAAK,EAAE,CAACc,MAAM,CAACC,SAAR,EAAmBf,KAAnB;EAAb,GAA4CC,IAA5C,GACGH,KAAK,IACJc,oBAACC,iBAAD;IAAMb,KAAK,EAAEc,MAAM,CAACE;EAApB,GACEJ,oBAACK,aAAD;IACEC,aAAa,EAAE,CADjB;IAEElB,KAAK,EAAE;MAAGK,KAAK,EAAED;IAAV,GAAyBM,IAAzB,GAAiCI,MAAM,CAAChB,KAAxC;EAFT,GAIGA,KAJH,CADF,CAFJ,EAWGD,QAXH,EAYEe,oBAACO,gBAAD;IAASnB,KAAK,EAAEc,MAAM,CAACM;EAAvB,EAZF,CADF;AALF;;AAuBAxB,aAAa,CAACyB,WAAdzB,GAA4B,gBAA5BA;;AAEA,IAAMkB,MAAM,GAAGQ,wBAAWC,MAAXD,CAAkB;EAC/BP,SAAS,EAAE;IACTS,YAAY,EAAE;EADL,CADoB;EAI/BR,cAAc,EAAE;IACdS,MAAM,EAAE,EADM;IAEdC,cAAc,EAAE;EAFF,CAJe;EAQ/B5B,KAAK,EAAE;IACL6B,UAAU,EAAE;EADP,CARwB;EAW/BP,OAAO,EAAE;IACPQ,SAAS,EAAE;EADJ;AAXsB,CAAlBN,CAAf;;eAgBeO,wBAAUjC,aAAViC,C","names":["DrawerSection","children","title","theme","style","rest","colors","fonts","titleColor","color","text","alpha","rgb","string","font","medium","React","View","styles","container","titleContainer","Text","numberOfLines","Divider","divider","displayName","StyleSheet","create","marginBottom","height","justifyContent","marginLeft","marginTop","withTheme"],"sources":["DrawerSection.tsx"],"sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Text from '../Typography/Text';\nimport Divider from '../Divider';\nimport { withTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Title to show as the header for the section.\n   */\n  title?: string;\n  /**\n   * Content of the `Drawer.Section`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to group content inside a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/drawer-section.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [active, setActive] = React.useState('');\n *\n *\n *   return (\n *     <Drawer.Section title=\"Some title\">\n *       <Drawer.Item\n *         label=\"First Item\"\n *         active={active === 'first'}\n *         onPress={() => setActive('first')}\n *       />\n *       <Drawer.Item\n *         label=\"Second Item\"\n *         active={active === 'second'}\n *         onPress={() => setActive('second')}\n *       />\n *     </Drawer.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerSection = ({ children, title, theme, style, ...rest }: Props) => {\n  const { colors, fonts } = theme;\n  const titleColor = color(colors.text).alpha(0.54).rgb().string();\n  const font = fonts.medium;\n\n  return (\n    <View style={[styles.container, style]} {...rest}>\n      {title && (\n        <View style={styles.titleContainer}>\n          <Text\n            numberOfLines={1}\n            style={[{ color: titleColor, ...font }, styles.title]}\n          >\n            {title}\n          </Text>\n        </View>\n      )}\n      {children}\n      <Divider style={styles.divider} />\n    </View>\n  );\n};\n\nDrawerSection.displayName = 'Drawer.Section';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 4,\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center',\n  },\n  title: {\n    marginLeft: 16,\n  },\n  divider: {\n    marginTop: 4,\n  },\n});\n\nexport default withTheme(DrawerSection);\n"]},"metadata":{},"sourceType":"script"}