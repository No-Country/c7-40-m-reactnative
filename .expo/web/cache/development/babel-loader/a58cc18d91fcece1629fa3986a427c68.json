{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = BottomTabBar;\nexports.getTabBarHeight = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _BottomTabItem = _interopRequireDefault(require(\"./BottomTabItem\"));\n\nvar _BottomTabBarHeightCallbackContext = _interopRequireDefault(require(\"../utils/BottomTabBarHeightCallbackContext\"));\n\nvar _useWindowDimensions = _interopRequireDefault(require(\"../utils/useWindowDimensions\"));\n\nvar _useIsKeyboardShown = _interopRequireDefault(require(\"../utils/useIsKeyboardShown\"));\n\nvar _excluded = [\"dimensions\", \"insets\", \"style\"];\nvar DEFAULT_TABBAR_HEIGHT = 49;\nvar COMPACT_TABBAR_HEIGHT = 32;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar useNativeDriver = _reactNative.Platform.OS !== 'web';\n\nvar shouldUseHorizontalLabels = function shouldUseHorizontalLabels(_ref) {\n  var state = _ref.state,\n      layout = _ref.layout,\n      dimensions = _ref.dimensions,\n      _ref$adaptive = _ref.adaptive,\n      adaptive = _ref$adaptive === void 0 ? true : _ref$adaptive,\n      labelPosition = _ref.labelPosition,\n      tabStyle = _ref.tabStyle;\n\n  if (labelPosition) {\n    return labelPosition === 'beside-icon';\n  }\n\n  if (!adaptive) {\n    return false;\n  }\n\n  if (layout.width >= 768) {\n    var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n    var flattenedStyle = _reactNative.StyleSheet.flatten(tabStyle);\n\n    if (flattenedStyle) {\n      if (typeof flattenedStyle.width === 'number') {\n        maxTabItemWidth = flattenedStyle.width;\n      } else if (typeof flattenedStyle.maxWidth === 'number') {\n        maxTabItemWidth = flattenedStyle.maxWidth;\n      }\n    }\n\n    return state.routes.length * maxTabItemWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nvar getPaddingBottom = function getPaddingBottom(insets) {\n  return Math.max(insets.bottom - _reactNative.Platform.select({\n    ios: 4,\n    default: 0\n  }), 0);\n};\n\nvar getTabBarHeight = function getTabBarHeight(_ref2) {\n  var dimensions = _ref2.dimensions,\n      insets = _ref2.insets,\n      style = _ref2.style,\n      rest = (0, _objectWithoutProperties2.default)(_ref2, _excluded);\n\n  var _StyleSheet$flatten;\n\n  var customHeight = (_StyleSheet$flatten = _reactNative.StyleSheet.flatten(style)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  var isLandscape = dimensions.width > dimensions.height;\n  var horizontalLabels = shouldUseHorizontalLabels(Object.assign({\n    dimensions: dimensions\n  }, rest));\n  var paddingBottom = getPaddingBottom(insets);\n\n  if (_reactNative.Platform.OS === 'ios' && !_reactNative.Platform.isPad && isLandscape && horizontalLabels) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexports.getTabBarHeight = getTabBarHeight;\n\nfunction BottomTabBar(_ref3) {\n  var state = _ref3.state,\n      navigation = _ref3.navigation,\n      descriptors = _ref3.descriptors,\n      activeBackgroundColor = _ref3.activeBackgroundColor,\n      activeTintColor = _ref3.activeTintColor,\n      adaptive = _ref3.adaptive,\n      allowFontScaling = _ref3.allowFontScaling,\n      inactiveBackgroundColor = _ref3.inactiveBackgroundColor,\n      inactiveTintColor = _ref3.inactiveTintColor,\n      _ref3$keyboardHidesTa = _ref3.keyboardHidesTabBar,\n      keyboardHidesTabBar = _ref3$keyboardHidesTa === void 0 ? false : _ref3$keyboardHidesTa,\n      labelPosition = _ref3.labelPosition,\n      labelStyle = _ref3.labelStyle,\n      iconStyle = _ref3.iconStyle,\n      safeAreaInsets = _ref3.safeAreaInsets,\n      showLabel = _ref3.showLabel,\n      style = _ref3.style,\n      tabStyle = _ref3.tabStyle;\n\n  var _safeAreaInsets$top, _safeAreaInsets$right, _safeAreaInsets$botto, _safeAreaInsets$left;\n\n  var _useTheme = (0, _native.useTheme)(),\n      colors = _useTheme.colors;\n\n  var buildLink = (0, _native.useLinkBuilder)();\n  var focusedRoute = state.routes[state.index];\n  var focusedDescriptor = descriptors[focusedRoute.key];\n  var focusedOptions = focusedDescriptor.options;\n  var dimensions = (0, _useWindowDimensions.default)();\n  var isKeyboardShown = (0, _useIsKeyboardShown.default)();\n\n  var onHeightChange = _react.default.useContext(_BottomTabBarHeightCallbackContext.default);\n\n  var shouldShowTabBar = focusedOptions.tabBarVisible !== false && !(keyboardHidesTabBar && isKeyboardShown);\n\n  var visibilityAnimationConfigRef = _react.default.useRef(focusedOptions.tabBarVisibilityAnimationConfig);\n\n  _react.default.useEffect(function () {\n    visibilityAnimationConfigRef.current = focusedOptions.tabBarVisibilityAnimationConfig;\n  });\n\n  var _React$useState = _react.default.useState(!shouldShowTabBar),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      isTabBarHidden = _React$useState2[0],\n      setIsTabBarHidden = _React$useState2[1];\n\n  var _React$useState3 = _react.default.useState(function () {\n    return new _reactNative.Animated.Value(shouldShowTabBar ? 1 : 0);\n  }),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 1),\n      visible = _React$useState4[0];\n\n  _react.default.useEffect(function () {\n    var visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      var _visibilityAnimationC, _visibilityAnimationC2;\n\n      var animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC = visibilityAnimationConfig.show) === null || _visibilityAnimationC === void 0 ? void 0 : _visibilityAnimationC.animation) === 'spring' ? _reactNative.Animated.spring : _reactNative.Animated.timing;\n      animation(visible, Object.assign({\n        toValue: 1,\n        useNativeDriver: useNativeDriver,\n        duration: 250\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC2 = visibilityAnimationConfig.show) === null || _visibilityAnimationC2 === void 0 ? void 0 : _visibilityAnimationC2.config)).start(function (_ref4) {\n        var finished = _ref4.finished;\n\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      var _visibilityAnimationC3, _visibilityAnimationC4;\n\n      setIsTabBarHidden(true);\n\n      var _animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC3 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC3 === void 0 ? void 0 : _visibilityAnimationC3.animation) === 'spring' ? _reactNative.Animated.spring : _reactNative.Animated.timing;\n\n      _animation(visible, Object.assign({\n        toValue: 0,\n        useNativeDriver: useNativeDriver,\n        duration: 200\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC4 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC4 === void 0 ? void 0 : _visibilityAnimationC4.config)).start();\n    }\n  }, [visible, shouldShowTabBar]);\n\n  var _React$useState5 = _react.default.useState({\n    height: 0,\n    width: dimensions.width\n  }),\n      _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\n      layout = _React$useState6[0],\n      setLayout = _React$useState6[1];\n\n  var handleLayout = function handleLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n        height = _e$nativeEvent$layout.height,\n        width = _e$nativeEvent$layout.width;\n    onHeightChange === null || onHeightChange === void 0 ? void 0 : onHeightChange(height);\n    setLayout(function (layout) {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height: height,\n          width: width\n        };\n      }\n    });\n  };\n\n  var routes = state.routes;\n  var defaultInsets = (0, _reactNativeSafeAreaContext.useSafeArea)();\n  var insets = {\n    top: (_safeAreaInsets$top = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.top) !== null && _safeAreaInsets$top !== void 0 ? _safeAreaInsets$top : defaultInsets.top,\n    right: (_safeAreaInsets$right = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) !== null && _safeAreaInsets$right !== void 0 ? _safeAreaInsets$right : defaultInsets.right,\n    bottom: (_safeAreaInsets$botto = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) !== null && _safeAreaInsets$botto !== void 0 ? _safeAreaInsets$botto : defaultInsets.bottom,\n    left: (_safeAreaInsets$left = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) !== null && _safeAreaInsets$left !== void 0 ? _safeAreaInsets$left : defaultInsets.left\n  };\n  var paddingBottom = getPaddingBottom(insets);\n  var tabBarHeight = getTabBarHeight({\n    state: state,\n    insets: insets,\n    dimensions: dimensions,\n    layout: layout,\n    adaptive: adaptive,\n    labelPosition: labelPosition,\n    tabStyle: tabStyle,\n    style: style\n  });\n  var hasHorizontalLabels = shouldUseHorizontalLabels({\n    state: state,\n    dimensions: dimensions,\n    layout: layout,\n    adaptive: adaptive,\n    labelPosition: labelPosition,\n    tabStyle: tabStyle\n  });\n  return _react.default.createElement(_reactNative.Animated.View, {\n    style: [styles.tabBar, {\n      backgroundColor: colors.card,\n      borderTopColor: colors.border\n    }, {\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height + paddingBottom + _reactNative.StyleSheet.hairlineWidth, 0]\n        })\n      }],\n      position: isTabBarHidden ? 'absolute' : null\n    }, {\n      height: tabBarHeight,\n      paddingBottom: paddingBottom,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }, style],\n    pointerEvents: isTabBarHidden ? 'none' : 'auto',\n    onLayout: handleLayout\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.content\n  }, routes.map(function (route, index) {\n    var focused = index === state.index;\n    var options = descriptors[route.key].options;\n\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch(Object.assign({}, _native.CommonActions.navigate(route.name), {\n          target: state.key\n        }));\n      }\n    };\n\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' ? \"\".concat(label, \", tab, \").concat(index + 1, \" of \").concat(routes.length) : undefined;\n    return _react.default.createElement(_native.NavigationContext.Provider, {\n      key: route.key,\n      value: descriptors[route.key].navigation\n    }, _react.default.createElement(_native.NavigationRouteContext.Provider, {\n      value: route\n    }, _react.default.createElement(_BottomTabItem.default, {\n      route: route,\n      focused: focused,\n      horizontal: hasHorizontalLabels,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      accessibilityLabel: accessibilityLabel,\n      to: buildLink(route.name, route.params),\n      testID: options.tabBarTestID,\n      allowFontScaling: allowFontScaling,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      activeBackgroundColor: activeBackgroundColor,\n      inactiveBackgroundColor: inactiveBackgroundColor,\n      button: options.tabBarButton,\n      icon: options.tabBarIcon,\n      badge: options.tabBarBadge,\n      badgeStyle: options.tabBarBadgeStyle,\n      label: label,\n      showLabel: showLabel,\n      labelStyle: labelStyle,\n      iconStyle: iconStyle,\n      style: tabStyle\n    })));\n  })));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: _reactNative.StyleSheet.hairlineWidth,\n    elevation: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;;;;AAAA;;AACA;;AASA;;AASA;;AAEA;;AACA;;AACA;;AACA;;;AAQA,IAAMA,qBAAqB,GAAG,EAA9B;AACA,IAAMC,qBAAqB,GAAG,EAA9B;AACA,IAAMC,0BAA0B,GAAG,GAAnC;AAEA,IAAMC,eAAe,GAAGC,sBAASC,EAATD,KAAgB,KAAxC;;AAWA,IAAME,yBAAyB,GAAG,SAA5BA,yBAA4B,OAOnB;EAAA,IANbC,KAMa,QANbA,KAMa;EAAA,IALbC,MAKa,QALbA,MAKa;EAAA,IAJbC,UAIa,QAJbA,UAIa;EAAA,yBAHbC,QAGa;EAAA,IAHbA,QAGa,8BAHF,IAGE;EAAA,IAFbC,aAEa,QAFbA,aAEa;EAAA,IADbC,QACa,QADbA,QACa;;EACb,IAAID,aAAJ,EAAmB;IACjB,OAAOA,aAAa,KAAK,aAAzB;EACD;;EAED,IAAI,CAACD,QAAL,EAAe;IACb,OAAO,KAAP;EACD;;EAED,IAAIF,MAAM,CAACK,KAAPL,IAAgB,GAApB,EAAyB;IAEvB,IAAIM,eAAe,GAAGZ,0BAAtB;;IAEA,IAAMa,cAAc,GAAGC,wBAAWC,OAAXD,CAAmBJ,QAAnBI,CAAvB;;IAEA,IAAID,cAAJ,EAAoB;MAClB,IAAI,OAAOA,cAAc,CAACF,KAAtB,KAAgC,QAApC,EAA8C;QAC5CC,eAAe,GAAGC,cAAc,CAACF,KAAjCC;MADF,OAEO,IAAI,OAAOC,cAAc,CAACG,QAAtB,KAAmC,QAAvC,EAAiD;QACtDJ,eAAe,GAAGC,cAAc,CAACG,QAAjCJ;MACD;IACF;;IAED,OAAOP,KAAK,CAACY,MAANZ,CAAaa,MAAbb,GAAsBO,eAAtBP,IAAyCC,MAAM,CAACK,KAAvD;EAdF,OAeO;IACL,OAAOJ,UAAU,CAACI,KAAXJ,GAAmBA,UAAU,CAACY,MAArC;EACD;AAjCH;;AAoCA,IAAMC,gBAAgB,GAAIC,SAApBD,gBAAoBC,OAAD;EAAA,OACvBC,IAAI,CAACC,GAALD,CAASD,MAAM,CAACG,MAAPH,GAAgBnB,sBAASuB,MAATvB,CAAgB;IAAEwB,GAAG,EAAE,CAAP;IAAUC,OAAO,EAAE;EAAnB,CAAhBzB,CAAzBoB,EAAkE,CAAlEA,CADuB;AAAA,CAAzB;;AAGO,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,QAQzB;EAAA,IAPJrB,UAOI,SAPJA,UAOI;EAAA,IANJc,MAMI,SANJA,MAMI;EAAA,IALJQ,KAKI,SALJA,KAKI;EAAA,IAJDC,IAIC;;EAAA;;EAEJ,IAAMC,YAAY,0BAAGjB,wBAAWC,OAAXD,CAAmBe,KAAnBf,CAAH,wDAAGkB,oBAA2Bb,MAAhD;;EAEA,IAAI,OAAOY,YAAP,KAAwB,QAA5B,EAAsC;IACpC,OAAOA,YAAP;EACD;;EAED,IAAME,WAAW,GAAG1B,UAAU,CAACI,KAAXJ,GAAmBA,UAAU,CAACY,MAAlD;EACA,IAAMe,gBAAgB,GAAG9B,yBAAyB;IAAGG,UAAF,EAAEA;EAAH,GAAkBuB,IAAlB,EAAlD;EACA,IAAMK,aAAa,GAAGf,gBAAgB,CAACC,MAAD,CAAtC;;EAEA,IACEnB,sBAASC,EAATD,KAAgB,KAAhBA,IACA,CAACA,sBAASkC,KADVlC,IAEA+B,WAFA/B,IAGAgC,gBAJF,EAKE;IACA,OAAOnC,qBAAqB,GAAGoC,aAA/B;EACD;;EAED,OAAOrC,qBAAqB,GAAGqC,aAA/B;AA7BK;;;;AAgCQ,SAASE,YAAT,QAkBL;EAAA,IAjBRhC,KAiBQ,SAjBRA,KAiBQ;EAAA,IAhBRiC,UAgBQ,SAhBRA,UAgBQ;EAAA,IAfRC,WAeQ,SAfRA,WAeQ;EAAA,IAdRC,qBAcQ,SAdRA,qBAcQ;EAAA,IAbRC,eAaQ,SAbRA,eAaQ;EAAA,IAZRjC,QAYQ,SAZRA,QAYQ;EAAA,IAXRkC,gBAWQ,SAXRA,gBAWQ;EAAA,IAVRC,uBAUQ,SAVRA,uBAUQ;EAAA,IATRC,iBASQ,SATRA,iBASQ;EAAA,kCARRC,mBAQQ;EAAA,IARRA,mBAQQ,sCARc,KAQd;EAAA,IAPRpC,aAOQ,SAPRA,aAOQ;EAAA,IANRqC,UAMQ,SANRA,UAMQ;EAAA,IALRC,SAKQ,SALRA,SAKQ;EAAA,IAJRC,cAIQ,SAJRA,cAIQ;EAAA,IAHRC,SAGQ,SAHRA,SAGQ;EAAA,IAFRpB,KAEQ,SAFRA,KAEQ;EAAA,IADRnB,QACQ,SADRA,QACQ;;EAAA;;EACR,gBAAmBwC,uBAAnB;EAAA,IAAQC,MAAR,aAAQA,MAAR;;EACA,IAAMC,SAAS,GAAGC,6BAAlB;EAEA,IAAMC,YAAY,GAAGjD,KAAK,CAACY,MAANZ,CAAaA,KAAK,CAACkD,KAAnBlD,CAArB;EACA,IAAMmD,iBAAiB,GAAGjB,WAAW,CAACe,YAAY,CAACG,GAAd,CAArC;EACA,IAAMC,cAAc,GAAGF,iBAAiB,CAACG,OAAzC;EAEA,IAAMpD,UAAU,GAAGqD,mCAAnB;EACA,IAAMC,eAAe,GAAGC,kCAAxB;;EAEA,IAAMC,cAAc,GAAGC,eAAMC,UAAND,CAAiBE,0CAAjBF,CAAvB;;EAEA,IAAMG,gBAAgB,GACpBT,cAAc,CAACU,aAAfV,KAAiC,KAAjCA,IACA,EAAEb,mBAAmB,IAAIgB,eAAzB,CAFF;;EAIA,IAAMQ,4BAA4B,GAAGL,eAAMM,MAANN,CACnCN,cAAc,CAACa,+BADoBP,CAArC;;EAIAA,eAAMQ,SAANR,CAAgB,YAAM;IACpBK,4BAA4B,CAACI,OAA7BJ,GACEX,cAAc,CAACa,+BADjBF;EADF;;EAKA,sBAA4CL,eAAMU,QAANV,CAAe,CAACG,gBAAhBH,CAA5C;EAAA;EAAA,IAAOW,cAAP;EAAA,IAAuBC,iBAAvB;;EAEA,uBAAkBZ,eAAMU,QAANV,CAChB;IAAA,OAAM,IAAIa,sBAASC,KAAb,CAAmBX,gBAAgB,GAAG,CAAH,GAAO,CAA1C,CAAN;EAAA,CADgBH,CAAlB;EAAA;EAAA,IAAOe,OAAP;;EAIAf,eAAMQ,SAANR,CAAgB,YAAM;IACpB,IAAMgB,yBAAyB,GAAGX,4BAA4B,CAACI,OAA/D;;IAEA,IAAIN,gBAAJ,EAAsB;MAAA;;MACpB,IAAMc,SAAS,GACb,0BAAyB,SAAzBD,6BAAyB,WAAzBA,8DAAyB,CAAEE,IAA3B,gFAAiCD,SAAjC,MAA+C,QAA/C,GACIJ,sBAASM,MADb,GAEIN,sBAASO,MAHf;MAKAH,SAAS,CAACF,OAAD;QACPM,OAAO,EAAE,CADF;QAEPpF,eAFiB,EAEjBA,eAFO;QAGPqF,QAAQ,EAAE;MAHH,GAIJN,yBAAH,SAAGA,6BAAH,WAAGA,GAAH,MAAGA,GAAH,0BAAGA,yBAAyB,CAAEE,IAA9B,2DAAGK,uBAAiCC,MAJ7B,EAATP,CAKGQ,KALHR,CAKS,iBAAkB;QAAA,IAAfS,QAAe,SAAfA,QAAe;;QACzB,IAAIA,QAAJ,EAAc;UACZd,iBAAiB,CAAC,KAAD,CAAjBA;QACD;MARH;IANF,OAgBO;MAAA;;MACLA,iBAAiB,CAAC,IAAD,CAAjBA;;MAEA,IAAMK,UAAS,GACb,0BAAyB,SAAzBD,6BAAyB,WAAzBA,+DAAyB,CAAEW,IAA3B,kFAAiCV,SAAjC,MAA+C,QAA/C,GACIJ,sBAASM,MADb,GAEIN,sBAASO,MAHf;;MAKAH,UAAS,CAACF,OAAD;QACPM,OAAO,EAAE,CADF;QAEPpF,eAFiB,EAEjBA,eAFO;QAGPqF,QAAQ,EAAE;MAHH,GAIJN,yBAAH,SAAGA,6BAAH,WAAGA,GAAH,MAAGA,GAAH,0BAAGA,yBAAyB,CAAEW,IAA9B,2DAAGC,uBAAiCJ,MAJ7B,EAATP,CAKGQ,KALHR;IAMD;EAjCH,GAkCG,CAACF,OAAD,EAAUZ,gBAAV,CAlCHH;;EAoCA,uBAA4BA,eAAMU,QAANV,CAAe;IACzC7C,MAAM,EAAE,CADiC;IAEzCR,KAAK,EAAEJ,UAAU,CAACI;EAFuB,CAAfqD,CAA5B;EAAA;EAAA,IAAO1D,MAAP;EAAA,IAAeuF,SAAf;;EAKA,IAAMC,YAAY,GAAIC,SAAhBD,YAAgBC,EAAD,EAA0B;IAC7C,4BAA0BA,CAAC,CAACC,WAAFD,CAAczF,MAAxC;IAAA,IAAQa,MAAR,yBAAQA,MAAR;IAAA,IAAgBR,KAAhB,yBAAgBA,KAAhB;IAEAoD,cAAc,SAAdA,kBAAc,WAAdA,0BAAc,CAAG5C,MAAH,CAAd4C;IAEA8B,SAAS,CAAEvF,gBAAD,EAAY;MACpB,IAAIa,MAAM,KAAKb,MAAM,CAACa,MAAlBA,IAA4BR,KAAK,KAAKL,MAAM,CAACK,KAAjD,EAAwD;QACtD,OAAOL,MAAP;MADF,OAEO;QACL,OAAO;UACLa,MADK,EACLA,MADK;UAELR;QAFK,CAAP;MAID;IARM,EAATkF;EALF;;EAiBA,IAAQ5E,MAAR,GAAmBZ,KAAnB,CAAQY,MAAR;EAEA,IAAMgF,aAAa,GAAGC,8CAAtB;EAEA,IAAM7E,MAAM,GAAG;IACb8E,GAAG,yBAAEnD,cAAF,SAAEA,kBAAF,WAAEA,GAAF,MAAEA,iBAAc,CAAEmD,GAAlB,qEAAyBF,aAAa,CAACE,GAD7B;IAEbC,KAAK,2BAAEpD,cAAF,SAAEA,kBAAF,WAAEA,GAAF,MAAEA,iBAAc,CAAEoD,KAAlB,yEAA2BH,aAAa,CAACG,KAFjC;IAGb5E,MAAM,2BAAEwB,cAAF,SAAEA,kBAAF,WAAEA,GAAF,MAAEA,iBAAc,CAAExB,MAAlB,yEAA4ByE,aAAa,CAACzE,MAHnC;IAIb6E,IAAI,0BAAErD,cAAF,SAAEA,kBAAF,WAAEA,GAAF,MAAEA,iBAAc,CAAEqD,IAAlB,uEAA0BJ,aAAa,CAACI;EAJ/B,CAAf;EAOA,IAAMlE,aAAa,GAAGf,gBAAgB,CAACC,MAAD,CAAtC;EACA,IAAMiF,YAAY,GAAG1E,eAAe,CAAC;IACnCvB,KADmC,EACnCA,KADmC;IAEnCgB,MAFmC,EAEnCA,MAFmC;IAGnCd,UAHmC,EAGnCA,UAHmC;IAInCD,MAJmC,EAInCA,MAJmC;IAKnCE,QALmC,EAKnCA,QALmC;IAMnCC,aANmC,EAMnCA,aANmC;IAOnCC,QAPmC,EAOnCA,QAPmC;IAQnCmB;EARmC,CAAD,CAApC;EAWA,IAAM0E,mBAAmB,GAAGnG,yBAAyB,CAAC;IACpDC,KADoD,EACpDA,KADoD;IAEpDE,UAFoD,EAEpDA,UAFoD;IAGpDD,MAHoD,EAGpDA,MAHoD;IAIpDE,QAJoD,EAIpDA,QAJoD;IAKpDC,aALoD,EAKpDA,aALoD;IAMpDC;EANoD,CAAD,CAArD;EASA,OACEsD,6BAACa,sBAAS2B,IAAV;IACE3E,KAAK,EAAE,CACL4E,MAAM,CAACC,MADF,EAEL;MACEC,eAAe,EAAExD,MAAM,CAACyD,IAD1B;MAEEC,cAAc,EAAE1D,MAAM,CAAC2D;IAFzB,CAFK,EAML;MACEC,SAAS,EAAE,CACT;QACEC,UAAU,EAAEjC,OAAO,CAACkC,WAARlC,CAAoB;UAC9BmC,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADkB;UAE9BC,WAAW,EAAE,CACX7G,MAAM,CAACa,MAAPb,GAAgB6B,aAAhB7B,GAAgCQ,wBAAWsG,aADhC,EAEX,CAFW;QAFiB,CAApBrC;MADd,CADS,CADb;MAcEsC,QAAQ,EAAE1C,cAAc,GAAG,UAAH,GAAiB;IAd3C,CANK,EAsBL;MACExD,MAAM,EAAEmF,YADV;MAEEnE,aAFF,EAEEA,aAFF;MAGEmF,iBAAiB,EAAEhG,IAAI,CAACC,GAALD,CAASD,MAAM,CAACgF,IAAhB/E,EAAsBD,MAAM,CAAC+E,KAA7B9E;IAHrB,CAtBK,EA2BLO,KA3BK,CADT;IA8BE0F,aAAa,EAAE5C,cAAc,GAAG,MAAH,GAAY,MA9B3C;IA+BE6C,QAAQ,EAAE1B;EA/BZ,GAiCE9B,6BAACwC,iBAAD;IAAM3E,KAAK,EAAE4E,MAAM,CAACgB;EAApB,GACGxG,MAAM,CAACyG,GAAPzG,CAAW,UAAC0G,KAAD,EAAQpE,KAAR,EAAkB;IAC5B,IAAMqE,OAAO,GAAGrE,KAAK,KAAKlD,KAAK,CAACkD,KAAhC;IACA,IAAQI,OAAR,GAAoBpB,WAAW,CAACoF,KAAK,CAAClE,GAAP,CAA/B,CAAQE,OAAR;;IAEA,IAAMkE,OAAO,GAAG,SAAVA,OAAU,GAAM;MACpB,IAAMC,KAAK,GAAGxF,UAAU,CAACyF,IAAXzF,CAAgB;QAC5B0F,IAAI,EAAE,UADsB;QAE5BC,MAAM,EAAEN,KAAK,CAAClE,GAFc;QAG5ByE,iBAAiB,EAAE;MAHS,CAAhB5F,CAAd;;MAMA,IAAI,CAACsF,OAAD,IAAY,CAACE,KAAK,CAACK,gBAAvB,EAAyC;QACvC7F,UAAU,CAAC8F,QAAX9F,mBACK+F,sBAAcC,QAAdD,CAAuBV,KAAK,CAACY,IAA7BF,CADL/F;UAEE2F,MAAM,EAAE5H,KAAK,CAACoD;QAFhBnB;MAID;IAZH;;IAeA,IAAMkG,WAAW,GAAG,SAAdA,WAAc,GAAM;MACxBlG,UAAU,CAACyF,IAAXzF,CAAgB;QACd0F,IAAI,EAAE,cADQ;QAEdC,MAAM,EAAEN,KAAK,CAAClE;MAFA,CAAhBnB;IADF;;IAOA,IAAMmG,KAAK,GACT9E,OAAO,CAAC+E,WAAR/E,KAAwBgF,SAAxBhF,GACIA,OAAO,CAAC+E,WADZ/E,GAEIA,OAAO,CAACiF,KAARjF,KAAkBgF,SAAlBhF,GACAA,OAAO,CAACiF,KADRjF,GAEAgE,KAAK,CAACY,IALZ;IAOA,IAAMM,kBAAkB,GACtBlF,OAAO,CAACmF,wBAARnF,KAAqCgF,SAArChF,GACIA,OAAO,CAACmF,wBADZnF,GAEI,OAAO8E,KAAP,KAAiB,QAAjB,aACGA,KADH,oBACkBlF,KAAK,GAAG,CAD1B,iBACkCtC,MAAM,CAACC,MADzC,IAEAyH,SALN;IAOA,OACE3E,6BAAC+E,0BAAkBC,QAAnB;MACEvF,GAAG,EAAEkE,KAAK,CAAClE,GADb;MAEEwF,KAAK,EAAE1G,WAAW,CAACoF,KAAK,CAAClE,GAAP,CAAXlB,CAAuBD;IAFhC,GAIE0B,6BAACkF,+BAAuBF,QAAxB;MAAiCC,KAAK,EAAEtB;IAAxC,GACE3D,6BAACmF,sBAAD;MACExB,KAAK,EAAEA,KADT;MAEEC,OAAO,EAAEA,OAFX;MAGEwB,UAAU,EAAE7C,mBAHd;MAIEsB,OAAO,EAAEA,OAJX;MAKEW,WAAW,EAAEA,WALf;MAMEK,kBAAkB,EAAEA,kBANtB;MAOEQ,EAAE,EAAEjG,SAAS,CAACuE,KAAK,CAACY,IAAP,EAAaZ,KAAK,CAAC2B,MAAnB,CAPf;MAQEC,MAAM,EAAE5F,OAAO,CAAC6F,YARlB;MASE9G,gBAAgB,EAAEA,gBATpB;MAUED,eAAe,EAAEA,eAVnB;MAWEG,iBAAiB,EAAEA,iBAXrB;MAYEJ,qBAAqB,EAAEA,qBAZzB;MAaEG,uBAAuB,EAAEA,uBAb3B;MAcE8G,MAAM,EAAE9F,OAAO,CAAC+F,YAdlB;MAeEC,IAAI,EAAEhG,OAAO,CAACiG,UAfhB;MAgBEC,KAAK,EAAElG,OAAO,CAACmG,WAhBjB;MAiBEC,UAAU,EAAEpG,OAAO,CAACqG,gBAjBtB;MAkBEvB,KAAK,EAAEA,KAlBT;MAmBExF,SAAS,EAAEA,SAnBb;MAoBEH,UAAU,EAAEA,UApBd;MAqBEC,SAAS,EAAEA,SArBb;MAsBElB,KAAK,EAAEnB;IAtBT,EADF,CAJF,CADF;EAxCD,EADH,CAjCF,CADF;AAgHD;;AAED,IAAM+F,MAAM,GAAG3F,wBAAWmJ,MAAXnJ,CAAkB;EAC/B4F,MAAM,EAAE;IACNL,IAAI,EAAE,CADA;IAEND,KAAK,EAAE,CAFD;IAGN5E,MAAM,EAAE,CAHF;IAIN0I,cAAc,EAAEpJ,wBAAWsG,aAJrB;IAKN+C,SAAS,EAAE;EALL,CADuB;EAQ/B1C,OAAO,EAAE;IACP2C,IAAI,EAAE,CADC;IAEPC,aAAa,EAAE;EAFR;AARsB,CAAlBvJ,CAAf","names":["DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","OS","shouldUseHorizontalLabels","state","layout","dimensions","adaptive","labelPosition","tabStyle","width","maxTabItemWidth","flattenedStyle","StyleSheet","flatten","maxWidth","routes","length","height","getPaddingBottom","insets","Math","max","bottom","select","ios","default","getTabBarHeight","style","rest","customHeight","_StyleSheet$flatten","isLandscape","horizontalLabels","paddingBottom","isPad","BottomTabBar","navigation","descriptors","activeBackgroundColor","activeTintColor","allowFontScaling","inactiveBackgroundColor","inactiveTintColor","keyboardHidesTabBar","labelStyle","iconStyle","safeAreaInsets","showLabel","useTheme","colors","buildLink","useLinkBuilder","focusedRoute","index","focusedDescriptor","key","focusedOptions","options","useWindowDimensions","isKeyboardShown","useIsKeyboardShown","onHeightChange","React","useContext","BottomTabBarHeightCallbackContext","shouldShowTabBar","tabBarVisible","visibilityAnimationConfigRef","useRef","tabBarVisibilityAnimationConfig","useEffect","current","useState","isTabBarHidden","setIsTabBarHidden","Animated","Value","visible","visibilityAnimationConfig","animation","show","spring","timing","toValue","duration","_visibilityAnimationC2","config","start","finished","hide","_visibilityAnimationC4","setLayout","handleLayout","e","nativeEvent","defaultInsets","useSafeArea","top","right","left","tabBarHeight","hasHorizontalLabels","View","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","pointerEvents","onLayout","content","map","route","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","CommonActions","navigate","name","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","NavigationContext","Provider","value","NavigationRouteContext","BottomTabItem","horizontal","to","params","testID","tabBarTestID","button","tabBarButton","icon","tabBarIcon","badge","tabBarBadge","badgeStyle","tabBarBadgeStyle","create","borderTopWidth","elevation","flex","flexDirection"],"sources":["BottomTabBar.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Platform,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  TabNavigationState,\n  ParamListBase,\n  CommonActions,\n  useTheme,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport { useSafeArea, EdgeInsets } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport type { BottomTabBarProps, LabelPosition } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n  tabStyle: StyleProp<ViewStyle>;\n  labelPosition: LabelPosition | undefined;\n  adaptive: boolean | undefined;\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  layout,\n  dimensions,\n  adaptive = true,\n  labelPosition,\n  tabStyle,\n}: Options) => {\n  if (labelPosition) {\n    return labelPosition === 'beside-icon';\n  }\n\n  if (!adaptive) {\n    return false;\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n    const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n    if (flattenedStyle) {\n      if (typeof flattenedStyle.width === 'number') {\n        maxTabItemWidth = flattenedStyle.width;\n      } else if (typeof flattenedStyle.maxWidth === 'number') {\n        maxTabItemWidth = flattenedStyle.maxWidth;\n      }\n    }\n\n    return state.routes.length * maxTabItemWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n}) => {\n  // @ts-ignore\n  const customHeight = StyleSheet.flatten(style)?.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({ dimensions, ...rest });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  iconStyle,\n  safeAreaInsets,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const dimensions = useWindowDimensions();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar =\n    focusedOptions.tabBarVisible !== false &&\n    !(keyboardHidesTabBar && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    focusedOptions.tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current =\n      focusedOptions.tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    onHeightChange?.(height);\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const defaultInsets = useSafeArea();\n\n  const insets = {\n    top: safeAreaInsets?.top ?? defaultInsets.top,\n    right: safeAreaInsets?.right ?? defaultInsets.right,\n    bottom: safeAreaInsets?.bottom ?? defaultInsets.bottom,\n    left: safeAreaInsets?.left ?? defaultInsets.left,\n  };\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    insets,\n    dimensions,\n    layout,\n    adaptive,\n    labelPosition,\n    tabStyle,\n    style,\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    dimensions,\n    layout,\n    adaptive,\n    labelPosition,\n    tabStyle,\n  });\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: tabBarHeight,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        style,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n      onLayout={handleLayout}\n    >\n      <View style={styles.content}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={allowFontScaling}\n                  activeTintColor={activeTintColor}\n                  inactiveTintColor={inactiveTintColor}\n                  activeBackgroundColor={activeBackgroundColor}\n                  inactiveBackgroundColor={inactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={options.tabBarIcon}\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={showLabel}\n                  labelStyle={labelStyle}\n                  iconStyle={iconStyle}\n                  style={tabStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}